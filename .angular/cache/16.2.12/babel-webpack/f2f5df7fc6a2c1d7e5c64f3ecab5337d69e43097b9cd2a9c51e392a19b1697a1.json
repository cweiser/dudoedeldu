{"ast":null,"code":"/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js';\nimport * as binary from './binary.js';\nimport { getRandomValues } from 'lib0/webcrypto';\nexport const rand = Math.random;\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0];\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8));\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0);\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)];\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */c => (c ^ uint32() & 15 >> c / 4).toString(16));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}