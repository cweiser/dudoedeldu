{"ast":null,"code":"/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js';\nimport * as binary from './binary.js';\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\nexport const LOWEST_INT32 = 1 << 31;\nexport const HIGHEST_INT32 = binary.BITS31;\nexport const HIGHEST_UINT32 = binary.BITS32;\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num);\nexport const isNaN = Number.isNaN;\nexport const parseInt = Number.parseInt;\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32;\n  let count = 0;\n  while (n) {\n    n &= n - 1;\n    count++;\n  }\n  return count;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}